// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MultiColumnSum.proto

package edu.zju.gis.hbase.coprocessor;

public final class MultiColumnSumProtocol {
    private MultiColumnSumProtocol() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }
    public interface CountRequestOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required string columns = 1;
        /**
         * <code>required string columns = 1;</code>
         */
        boolean hasColumns();
        /**
         * <code>required string columns = 1;</code>
         */
        java.lang.String getColumns();
        /**
         * <code>required string columns = 1;</code>
         */
        com.google.protobuf.ByteString
        getColumnsBytes();
    }
    /**
     * Protobuf type {@code CountRequest}
     */
    public static final class CountRequest extends
            com.google.protobuf.GeneratedMessage
            implements CountRequestOrBuilder {
        // Use CountRequest.newBuilder() to construct.
        private CountRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private CountRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final CountRequest defaultInstance;
        public static CountRequest getDefaultInstance() {
            return defaultInstance;
        }

        public CountRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private CountRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            bitField0_ |= 0x00000001;
                            columns_ = input.readBytes();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.class, edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.Builder.class);
        }

        public static com.google.protobuf.Parser<CountRequest> PARSER =
                new com.google.protobuf.AbstractParser<CountRequest>() {
                    public CountRequest parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new CountRequest(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<CountRequest> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required string columns = 1;
        public static final int COLUMNS_FIELD_NUMBER = 1;
        private java.lang.Object columns_;
        /**
         * <code>required string columns = 1;</code>
         */
        public boolean hasColumns() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string columns = 1;</code>
         */
        public java.lang.String getColumns() {
            java.lang.Object ref = columns_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    columns_ = s;
                }
                return s;
            }
        }
        /**
         * <code>required string columns = 1;</code>
         */
        public com.google.protobuf.ByteString
        getColumnsBytes() {
            java.lang.Object ref = columns_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                columns_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            columns_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasColumns()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getColumnsBytes());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getColumnsBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest)) {
                return super.equals(obj);
            }
            edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest other = (edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest) obj;

            boolean result = true;
            result = result && (hasColumns() == other.hasColumns());
            if (hasColumns()) {
                result = result && getColumns()
                        .equals(other.getColumns());
            }
            result = result &&
                    getUnknownFields().equals(other.getUnknownFields());
            return result;
        }

        private int memoizedHashCode = 0;
        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasColumns()) {
                hash = (37 * hash) + COLUMNS_FIELD_NUMBER;
                hash = (53 * hash) + getColumns().hashCode();
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code CountRequest}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequestOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.class, edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.Builder.class);
            }

            // Construct using edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                columns_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountRequest_descriptor;
            }

            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest getDefaultInstanceForType() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.getDefaultInstance();
            }

            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest build() {
                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest buildPartial() {
                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest result = new edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.columns_ = columns_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest) {
                    return mergeFrom((edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest other) {
                if (other == edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.getDefaultInstance()) return this;
                if (other.hasColumns()) {
                    bitField0_ |= 0x00000001;
                    columns_ = other.columns_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasColumns()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required string columns = 1;
            private java.lang.Object columns_ = "";
            /**
             * <code>required string columns = 1;</code>
             */
            public boolean hasColumns() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required string columns = 1;</code>
             */
            public java.lang.String getColumns() {
                java.lang.Object ref = columns_;
                if (!(ref instanceof java.lang.String)) {
                    java.lang.String s = ((com.google.protobuf.ByteString) ref)
                            .toStringUtf8();
                    columns_ = s;
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>required string columns = 1;</code>
             */
            public com.google.protobuf.ByteString
            getColumnsBytes() {
                java.lang.Object ref = columns_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    columns_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>required string columns = 1;</code>
             */
            public Builder setColumns(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                columns_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required string columns = 1;</code>
             */
            public Builder clearColumns() {
                bitField0_ = (bitField0_ & ~0x00000001);
                columns_ = getDefaultInstance().getColumns();
                onChanged();
                return this;
            }
            /**
             * <code>required string columns = 1;</code>
             */
            public Builder setColumnsBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                columns_ = value;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:CountRequest)
        }

        static {
            defaultInstance = new CountRequest(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CountRequest)
    }

    public interface CountResponseOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

        // required int64 count1 = 1 [default = 0];
        /**
         * <code>required int64 count1 = 1 [default = 0];</code>
         */
        boolean hasCount1();
        /**
         * <code>required int64 count1 = 1 [default = 0];</code>
         */
        long getCount1();

        // required int64 count2 = 2 [default = 0];
        /**
         * <code>required int64 count2 = 2 [default = 0];</code>
         */
        boolean hasCount2();
        /**
         * <code>required int64 count2 = 2 [default = 0];</code>
         */
        long getCount2();

        // required int64 sum1 = 3 [default = 0];
        /**
         * <code>required int64 sum1 = 3 [default = 0];</code>
         */
        boolean hasSum1();
        /**
         * <code>required int64 sum1 = 3 [default = 0];</code>
         */
        long getSum1();

        // required int64 sum2 = 4 [default = 0];
        /**
         * <code>required int64 sum2 = 4 [default = 0];</code>
         */
        boolean hasSum2();
        /**
         * <code>required int64 sum2 = 4 [default = 0];</code>
         */
        long getSum2();
    }
    /**
     * Protobuf type {@code CountResponse}
     */
    public static final class CountResponse extends
            com.google.protobuf.GeneratedMessage
            implements CountResponseOrBuilder {
        // Use CountResponse.newBuilder() to construct.
        private CountResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private CountResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final CountResponse defaultInstance;
        public static CountResponse getDefaultInstance() {
            return defaultInstance;
        }

        public CountResponse getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private CountResponse(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            count1_ = input.readInt64();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            count2_ = input.readInt64();
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            sum1_ = input.readInt64();
                            break;
                        }
                        case 32: {
                            bitField0_ |= 0x00000008;
                            sum2_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountResponse_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.class, edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.Builder.class);
        }

        public static com.google.protobuf.Parser<CountResponse> PARSER =
                new com.google.protobuf.AbstractParser<CountResponse>() {
                    public CountResponse parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new CountResponse(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<CountResponse> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        // required int64 count1 = 1 [default = 0];
        public static final int COUNT1_FIELD_NUMBER = 1;
        private long count1_;
        /**
         * <code>required int64 count1 = 1 [default = 0];</code>
         */
        public boolean hasCount1() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int64 count1 = 1 [default = 0];</code>
         */
        public long getCount1() {
            return count1_;
        }

        // required int64 count2 = 2 [default = 0];
        public static final int COUNT2_FIELD_NUMBER = 2;
        private long count2_;
        /**
         * <code>required int64 count2 = 2 [default = 0];</code>
         */
        public boolean hasCount2() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int64 count2 = 2 [default = 0];</code>
         */
        public long getCount2() {
            return count2_;
        }

        // required int64 sum1 = 3 [default = 0];
        public static final int SUM1_FIELD_NUMBER = 3;
        private long sum1_;
        /**
         * <code>required int64 sum1 = 3 [default = 0];</code>
         */
        public boolean hasSum1() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int64 sum1 = 3 [default = 0];</code>
         */
        public long getSum1() {
            return sum1_;
        }

        // required int64 sum2 = 4 [default = 0];
        public static final int SUM2_FIELD_NUMBER = 4;
        private long sum2_;
        /**
         * <code>required int64 sum2 = 4 [default = 0];</code>
         */
        public boolean hasSum2() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required int64 sum2 = 4 [default = 0];</code>
         */
        public long getSum2() {
            return sum2_;
        }

        private void initFields() {
            count1_ = 0L;
            count2_ = 0L;
            sum1_ = 0L;
            sum2_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            if (!hasCount1()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasCount2()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSum1()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasSum2()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeInt64(1, count1_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeInt64(2, count2_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeInt64(3, sum1_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeInt64(4, sum2_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(1, count1_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(2, count2_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, sum1_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, sum2_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse)) {
                return super.equals(obj);
            }
            edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse other = (edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse) obj;

            boolean result = true;
            result = result && (hasCount1() == other.hasCount1());
            if (hasCount1()) {
                result = result && (getCount1()
                        == other.getCount1());
            }
            result = result && (hasCount2() == other.hasCount2());
            if (hasCount2()) {
                result = result && (getCount2()
                        == other.getCount2());
            }
            result = result && (hasSum1() == other.hasSum1());
            if (hasSum1()) {
                result = result && (getSum1()
                        == other.getSum1());
            }
            result = result && (hasSum2() == other.hasSum2());
            if (hasSum2()) {
                result = result && (getSum2()
                        == other.getSum2());
            }
            result = result &&
                    getUnknownFields().equals(other.getUnknownFields());
            return result;
        }

        private int memoizedHashCode = 0;
        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasCount1()) {
                hash = (37 * hash) + COUNT1_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(getCount1());
            }
            if (hasCount2()) {
                hash = (37 * hash) + COUNT2_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(getCount2());
            }
            if (hasSum1()) {
                hash = (37 * hash) + SUM1_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(getSum1());
            }
            if (hasSum2()) {
                hash = (37 * hash) + SUM2_FIELD_NUMBER;
                hash = (53 * hash) + hashLong(getSum2());
            }
            hash = (29 * hash) + getUnknownFields().hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code CountResponse}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder>
                implements edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponseOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountResponse_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountResponse_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.class, edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.Builder.class);
            }

            // Construct using edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                count1_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000001);
                count2_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000002);
                sum1_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                sum2_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.internal_static_CountResponse_descriptor;
            }

            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse getDefaultInstanceForType() {
                return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.getDefaultInstance();
            }

            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse build() {
                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse buildPartial() {
                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse result = new edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.count1_ = count1_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.count2_ = count2_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.sum1_ = sum1_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.sum2_ = sum2_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse) {
                    return mergeFrom((edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse other) {
                if (other == edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.getDefaultInstance()) return this;
                if (other.hasCount1()) {
                    setCount1(other.getCount1());
                }
                if (other.hasCount2()) {
                    setCount2(other.getCount2());
                }
                if (other.hasSum1()) {
                    setSum1(other.getSum1());
                }
                if (other.hasSum2()) {
                    setSum2(other.getSum2());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasCount1()) {

                    return false;
                }
                if (!hasCount2()) {

                    return false;
                }
                if (!hasSum1()) {

                    return false;
                }
                if (!hasSum2()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            // required int64 count1 = 1 [default = 0];
            private long count1_ ;
            /**
             * <code>required int64 count1 = 1 [default = 0];</code>
             */
            public boolean hasCount1() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required int64 count1 = 1 [default = 0];</code>
             */
            public long getCount1() {
                return count1_;
            }
            /**
             * <code>required int64 count1 = 1 [default = 0];</code>
             */
            public Builder setCount1(long value) {
                bitField0_ |= 0x00000001;
                count1_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required int64 count1 = 1 [default = 0];</code>
             */
            public Builder clearCount1() {
                bitField0_ = (bitField0_ & ~0x00000001);
                count1_ = 0L;
                onChanged();
                return this;
            }

            // required int64 count2 = 2 [default = 0];
            private long count2_ ;
            /**
             * <code>required int64 count2 = 2 [default = 0];</code>
             */
            public boolean hasCount2() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required int64 count2 = 2 [default = 0];</code>
             */
            public long getCount2() {
                return count2_;
            }
            /**
             * <code>required int64 count2 = 2 [default = 0];</code>
             */
            public Builder setCount2(long value) {
                bitField0_ |= 0x00000002;
                count2_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required int64 count2 = 2 [default = 0];</code>
             */
            public Builder clearCount2() {
                bitField0_ = (bitField0_ & ~0x00000002);
                count2_ = 0L;
                onChanged();
                return this;
            }

            // required int64 sum1 = 3 [default = 0];
            private long sum1_ ;
            /**
             * <code>required int64 sum1 = 3 [default = 0];</code>
             */
            public boolean hasSum1() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>required int64 sum1 = 3 [default = 0];</code>
             */
            public long getSum1() {
                return sum1_;
            }
            /**
             * <code>required int64 sum1 = 3 [default = 0];</code>
             */
            public Builder setSum1(long value) {
                bitField0_ |= 0x00000004;
                sum1_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required int64 sum1 = 3 [default = 0];</code>
             */
            public Builder clearSum1() {
                bitField0_ = (bitField0_ & ~0x00000004);
                sum1_ = 0L;
                onChanged();
                return this;
            }

            // required int64 sum2 = 4 [default = 0];
            private long sum2_ ;
            /**
             * <code>required int64 sum2 = 4 [default = 0];</code>
             */
            public boolean hasSum2() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>required int64 sum2 = 4 [default = 0];</code>
             */
            public long getSum2() {
                return sum2_;
            }
            /**
             * <code>required int64 sum2 = 4 [default = 0];</code>
             */
            public Builder setSum2(long value) {
                bitField0_ |= 0x00000008;
                sum2_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required int64 sum2 = 4 [default = 0];</code>
             */
            public Builder clearSum2() {
                bitField0_ = (bitField0_ & ~0x00000008);
                sum2_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:CountResponse)
        }

        static {
            defaultInstance = new CountResponse(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CountResponse)
    }

    /**
     * Protobuf service {@code RowCountService}
     */
    public static abstract class RowCountService
            implements com.google.protobuf.Service {
        protected RowCountService() {}

        public interface Interface {
            /**
             * <code>rpc getCountAndSum(.CountRequest) returns (.CountResponse);</code>
             */
            public abstract void getCountAndSum(
                    com.google.protobuf.RpcController controller,
                    edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest request,
                    com.google.protobuf.RpcCallback<edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse> done);

        }

        public static com.google.protobuf.Service newReflectiveService(
                final Interface impl) {
            return new RowCountService() {
                @java.lang.Override
                public  void getCountAndSum(
                        com.google.protobuf.RpcController controller,
                        edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest request,
                        com.google.protobuf.RpcCallback<edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse> done) {
                    impl.getCountAndSum(controller, request, done);
                }

            };
        }

        public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
            return new com.google.protobuf.BlockingService() {
                public final com.google.protobuf.Descriptors.ServiceDescriptor
                getDescriptorForType() {
                    return getDescriptor();
                }

                public final com.google.protobuf.Message callBlockingMethod(
                        com.google.protobuf.Descriptors.MethodDescriptor method,
                        com.google.protobuf.RpcController controller,
                        com.google.protobuf.Message request)
                        throws com.google.protobuf.ServiceException {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.callBlockingMethod() given method descriptor for " +
                                        "wrong service type.");
                    }
                    switch(method.getIndex()) {
                        case 0:
                            return impl.getCountAndSum(controller, (edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest)request);
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getRequestPrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.getRequestPrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch(method.getIndex()) {
                        case 0:
                            return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.getDefaultInstance();
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

                public final com.google.protobuf.Message
                getResponsePrototype(
                        com.google.protobuf.Descriptors.MethodDescriptor method) {
                    if (method.getService() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException(
                                "Service.getResponsePrototype() given method " +
                                        "descriptor for wrong service type.");
                    }
                    switch(method.getIndex()) {
                        case 0:
                            return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.getDefaultInstance();
                        default:
                            throw new java.lang.AssertionError("Can't get here.");
                    }
                }

            };
        }

        /**
         * <code>rpc getCountAndSum(.CountRequest) returns (.CountResponse);</code>
         */
        public abstract void getCountAndSum(
                com.google.protobuf.RpcController controller,
                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest request,
                com.google.protobuf.RpcCallback<edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse> done);

        public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
            return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.getDescriptor().getServices().get(0);
        }
        public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }

        public final void callMethod(
                com.google.protobuf.Descriptors.MethodDescriptor method,
                com.google.protobuf.RpcController controller,
                com.google.protobuf.Message request,
                com.google.protobuf.RpcCallback<
                        com.google.protobuf.Message> done) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.callMethod() given method descriptor for wrong " +
                                "service type.");
            }
            switch(method.getIndex()) {
                case 0:
                    this.getCountAndSum(controller, (edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest)request,
                            com.google.protobuf.RpcUtil.<edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse>specializeCallback(
                                    done));
                    return;
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getRequestPrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.getRequestPrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch(method.getIndex()) {
                case 0:
                    return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest.getDefaultInstance();
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public final com.google.protobuf.Message
        getResponsePrototype(
                com.google.protobuf.Descriptors.MethodDescriptor method) {
            if (method.getService() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "Service.getResponsePrototype() given method " +
                                "descriptor for wrong service type.");
            }
            switch(method.getIndex()) {
                case 0:
                    return edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.getDefaultInstance();
                default:
                    throw new java.lang.AssertionError("Can't get here.");
            }
        }

        public static Stub newStub(
                com.google.protobuf.RpcChannel channel) {
            return new Stub(channel);
        }

        public static final class Stub extends edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.RowCountService implements Interface {
            private Stub(com.google.protobuf.RpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.RpcChannel channel;

            public com.google.protobuf.RpcChannel getChannel() {
                return channel;
            }

            public  void getCountAndSum(
                    com.google.protobuf.RpcController controller,
                    edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest request,
                    com.google.protobuf.RpcCallback<edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse> done) {
                channel.callMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.getDefaultInstance(),
                        com.google.protobuf.RpcUtil.generalizeCallback(
                                done,
                                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.class,
                                edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.getDefaultInstance()));
            }
        }

        public static BlockingInterface newBlockingStub(
                com.google.protobuf.BlockingRpcChannel channel) {
            return new BlockingStub(channel);
        }

        public interface BlockingInterface {
            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse getCountAndSum(
                    com.google.protobuf.RpcController controller,
                    edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest request)
                    throws com.google.protobuf.ServiceException;
        }

        private static final class BlockingStub implements BlockingInterface {
            private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
                this.channel = channel;
            }

            private final com.google.protobuf.BlockingRpcChannel channel;

            public edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse getCountAndSum(
                    com.google.protobuf.RpcController controller,
                    edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountRequest request)
                    throws com.google.protobuf.ServiceException {
                return (edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse) channel.callBlockingMethod(
                        getDescriptor().getMethods().get(0),
                        controller,
                        request,
                        edu.zju.gis.hbase.coprocessor.MultiColumnSumProtocol.CountResponse.getDefaultInstance());
            }

        }

        // @@protoc_insertion_point(class_scope:RowCountService)
    }

    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_CountRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_CountRequest_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.Descriptor
            internal_static_CountResponse_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_CountResponse_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        java.lang.String[] descriptorData = {
                "\n\024MultiColumnSum.proto\"\037\n\014CountRequest\022\017" +
                        "\n\007columns\030\001 \002(\t\"W\n\rCountResponse\022\021\n\006coun" +
                        "t1\030\001 \002(\003:\0010\022\021\n\006count2\030\002 \002(\003:\0010\022\017\n\004sum1\030\003" +
                        " \002(\003:\0010\022\017\n\004sum2\030\004 \002(\003:\00102B\n\017RowCountServ" +
                        "ice\022/\n\016getCountAndSum\022\r.CountRequest\032\016.C" +
                        "ountResponseB?\n\035edu.zju.gis.hbase.coproc" +
                        "essorB\026MultiColumnSumProtocolH\001\210\001\001\240\001\001"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        internal_static_CountRequest_descriptor =
                                getDescriptor().getMessageTypes().get(0);
                        internal_static_CountRequest_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_CountRequest_descriptor,
                                new java.lang.String[] { "Columns", });
                        internal_static_CountResponse_descriptor =
                                getDescriptor().getMessageTypes().get(1);
                        internal_static_CountResponse_fieldAccessorTable = new
                                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                                internal_static_CountResponse_descriptor,
                                new java.lang.String[] { "Count1", "Count2", "Sum1", "Sum2", });
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                        }, assigner);
    }

    // @@protoc_insertion_point(outer_class_scope)
}
